---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app: admin
    # Note that the backend talks over HTTP.
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    # TODO: Fill in with the ARN of your certificate.
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: substitute-me-acm-cert-substitute-me
    # Only run SSL on the port named "https" below.
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
  labels:
    io.kompose.service: currikidev-admin
  name: currikidev-admin
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: 6000
    protocol: TCP
  - name: https
    port: 443
    targetPort: 6000
  selector:
    io.kompose.service: currikidev-admin

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: currikidev-admin
    app: admin
  name: currikidev-admin
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: currikidev-admin
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.k8s.yml -o yamls/
        kompose.version: 1.21.0 ()
      creationTimestamp: null
      labels:
        io.kompose.network/currikidev-laravel: "true"
        io.kompose.service: currikidev-admin
    spec:
      volumes:
      - name: admin-storage
        emptyDir: {}
      - name: curriki-admin-env
        secret:
          defaultMode: 420
          secretName: curriki-admin-env
      initContainers:
      - name: init-container
        image: quay.io/curriki/curriki-admin:latest
        command: [ "/bin/bash", "-c", "cd /var/www/html/storage && mkdir -p framework/views && mkdir -p framework/sessions && mkdir -p framework/cache/data && mkdir -p framework/testing && mkdir -p logs && mkdir -p app/public && chmod 777 -R /var/www/html/storage" ]
        volumeMounts:
        - mountPath: /var/www/html/storage
          name: admin-storage
        - name: curriki-admin-env
          mountPath: /var/www/html/.env
          subPath: .env
      containers:
      - name: curriki-admin
        # env:
        #   - name: jaeger_service
        #     value: jaeger-all-in-one-inmemory-agent:6831
        # livenessProbe:
        #   tcpSocket:
        #     port: 9999
        #   timeoutSeconds: 1
        #   periodSeconds: 10
        #   successThreshold: 1
        #   failureThreshold: 3
        image: quay.io/curriki/curriki-admin:latest
        resources: { }
        ports:
          - containerPort: 6000
        # readinessProbe:
        #   tcpSocket:
        #     port: 9999
        #   timeoutSeconds: 1
        #   periodSeconds: 10
        #   successThreshold: 1
        #   failureThreshold: 3
        volumeMounts:
        - name: admin-storage
          mountPath: /var/www/html/storage
        - name: curriki-admin-env
          mountPath: /var/www/html/.env
          subPath: .env
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        imagePullPolicy: Always
      restartPolicy: Always
      serviceAccountName: ""
