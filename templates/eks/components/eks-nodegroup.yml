---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'EKS Managed Nodes'
Mappings:
  ServicePrincipalPartitionMap:
    aws:
      EC2: ec2.amazonaws.com
      EKS: eks.amazonaws.com
      EKSFargatePods: eks-fargate-pods.amazonaws.com
    aws-cn:
      EC2: ec2.amazonaws.com.cn
      EKS: eks.amazonaws.com
      EKSFargatePods: eks-fargate-pods.amazonaws.com
    aws-us-gov:
      EC2: ec2.amazonaws.com
      EKS: eks.amazonaws.com
      EKSFargatePods: eks-fargate-pods.amazonaws.com
Parameters:
  ClusterName: 
    Type: String
    Description: Name of your managed EKS Cluster
  EbsDiskSize:
    Type: Number
    Description: Size of EBS Volume to be attached with worker nodes
  InstanceType:
    Type: String
    Description: Instance type for worker nodes
    ConstraintDescription: Must be a valid EC2 Instance Type
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c1.medium
      - c1.xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - g2.2xlarge
      - g2.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - hi1.4xlarge
      - hs1.8xlarge
      - cr1.8xlarge
      - cc2.8xlarge
      - cg1.4xlarge
  SSHKeyPair:
    Description: Ec2 Keypair Name
    Type: AWS::EC2::KeyPair::KeyName
  MinWorkerNodes:
    Type: Number
    Description: Minimum no. of Worker nodes in EKS Cluster
  MaxWorkerNodes:
    Type: Number
    Description: Maximum no. of Worker nodes in EKS Cluster
  DesiredWorkerNodes:
    Type: Number
    Description: Desired no. of Worker nodes in EKS Cluster
  PublicSubnets:
    Type: String
Resources:
  ManagedNodeGroup:
    Type: AWS::EKS::Nodegroup
    Properties:
      AmiType: AL2_x86_64
      ClusterName: !Ref ClusterName
      DiskSize: !Ref EbsDiskSize
      InstanceTypes:
      - !Ref InstanceType
      Labels:
        alpha.eksctl.io/cluster-name: !Ref ClusterName
        alpha.eksctl.io/nodegroup-name: !Join ['-', [!Ref ClusterName, 'nodegroup']]
      NodeRole:
        Fn::GetAtt:
        - NodeInstanceRole
        - Arn
      NodegroupName: !Join ['-', [!Ref ClusterName, 'nodegroup']]
      RemoteAccess:
        Ec2SshKey: !Ref SSHKeyPair
      ScalingConfig:
        DesiredSize: !Ref DesiredWorkerNodes
        MaxSize: !Ref MaxWorkerNodes
        MinSize: !Ref MinWorkerNodes
      Subnets:
        Fn::Split:
        - ","
        - !Ref PublicSubnets
      Tags:
        alpha.eksctl.io/nodegroup-name: !Join ['-', [!Ref ClusterName, 'nodegroup']]
        alpha.eksctl.io/nodegroup-type: managed
  NodeInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - Fn::FindInMap:
              - ServicePrincipalPartitionMap
              - Ref: AWS::Partition
              - EC2
        Version: '2012-10-17'
      ManagedPolicyArns:
      - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser
      - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
      - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/AmazonEKSWorkerNodePolicy
      - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/AmazonEKS_CNI_Policy
      Path: "/"
      Tags:
      - Key: Name
        Value:
          Fn::Sub: "${AWS::StackName}/NodeInstanceRole"
  PolicyALBIngress:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - acm:DescribeCertificate
          - acm:ListCertificates
          - acm:GetCertificate
          - ec2:AuthorizeSecurityGroupIngress
          - ec2:CreateSecurityGroup
          - ec2:CreateTags
          - ec2:DeleteTags
          - ec2:DeleteSecurityGroup
          - ec2:DescribeAccountAttributes
          - ec2:DescribeAddresses
          - ec2:DescribeInstances
          - ec2:DescribeInstanceStatus
          - ec2:DescribeInternetGateways
          - ec2:DescribeNetworkInterfaces
          - ec2:DescribeSecurityGroups
          - ec2:DescribeSubnets
          - ec2:DescribeTags
          - ec2:DescribeVpcs
          - ec2:ModifyInstanceAttribute
          - ec2:ModifyNetworkInterfaceAttribute
          - ec2:RevokeSecurityGroupIngress
          - elasticloadbalancing:AddListenerCertificates
          - elasticloadbalancing:AddTags
          - elasticloadbalancing:CreateListener
          - elasticloadbalancing:CreateLoadBalancer
          - elasticloadbalancing:CreateRule
          - elasticloadbalancing:CreateTargetGroup
          - elasticloadbalancing:DeleteListener
          - elasticloadbalancing:DeleteLoadBalancer
          - elasticloadbalancing:DeleteRule
          - elasticloadbalancing:DeleteTargetGroup
          - elasticloadbalancing:DeregisterTargets
          - elasticloadbalancing:DescribeListenerCertificates
          - elasticloadbalancing:DescribeListeners
          - elasticloadbalancing:DescribeLoadBalancers
          - elasticloadbalancing:DescribeLoadBalancerAttributes
          - elasticloadbalancing:DescribeRules
          - elasticloadbalancing:DescribeSSLPolicies
          - elasticloadbalancing:DescribeTags
          - elasticloadbalancing:DescribeTargetGroups
          - elasticloadbalancing:DescribeTargetGroupAttributes
          - elasticloadbalancing:DescribeTargetHealth
          - elasticloadbalancing:ModifyListener
          - elasticloadbalancing:ModifyLoadBalancerAttributes
          - elasticloadbalancing:ModifyRule
          - elasticloadbalancing:ModifyTargetGroup
          - elasticloadbalancing:ModifyTargetGroupAttributes
          - elasticloadbalancing:RegisterTargets
          - elasticloadbalancing:RemoveListenerCertificates
          - elasticloadbalancing:RemoveTags
          - elasticloadbalancing:SetIpAddressType
          - elasticloadbalancing:SetSecurityGroups
          - elasticloadbalancing:SetSubnets
          - elasticloadbalancing:SetWebACL
          - iam:CreateServiceLinkedRole
          - iam:GetServerCertificate
          - iam:ListServerCertificates
          - waf-regional:GetWebACLForResource
          - waf-regional:GetWebACL
          - waf-regional:AssociateWebACL
          - waf-regional:DisassociateWebACL
          - tag:GetResources
          - tag:TagResources
          - waf:GetWebACL
          - wafv2:GetWebACL
          - wafv2:GetWebACLForResource
          - wafv2:AssociateWebACL
          - wafv2:DisassociateWebACL
          - shield:DescribeProtection
          - shield:GetSubscriptionState
          - shield:DeleteProtection
          - shield:CreateProtection
          - shield:DescribeSubscription
          - shield:ListProtections
          Effect: Allow
          Resource: "*"
        Version: '2012-10-17'
      PolicyName:
        Fn::Sub: "${AWS::StackName}-PolicyALBIngress"
      Roles:
      - Ref: NodeInstanceRole
  PolicyAutoScaling:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - autoscaling:DescribeAutoScalingGroups
          - autoscaling:DescribeAutoScalingInstances
          - autoscaling:DescribeLaunchConfigurations
          - autoscaling:DescribeTags
          - autoscaling:SetDesiredCapacity
          - autoscaling:TerminateInstanceInAutoScalingGroup
          - ec2:DescribeLaunchTemplateVersions
          Effect: Allow
          Resource: "*"
        Version: '2012-10-17'
      PolicyName:
        Fn::Sub: "${AWS::StackName}-PolicyAutoScaling"
      Roles:
      - Ref: NodeInstanceRole
  PolicyExternalDNSChangeSet:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - route53:ChangeResourceRecordSets
          Effect: Allow
          Resource:
            Fn::Sub: arn:${AWS::Partition}:route53:::hostedzone/*
        Version: '2012-10-17'
      PolicyName:
        Fn::Sub: "${AWS::StackName}-PolicyExternalDNSChangeSet"
      Roles:
      - Ref: NodeInstanceRole
  PolicyExternalDNSHostedZones:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - route53:ListHostedZones
          - route53:ListResourceRecordSets
          - route53:ListTagsForResource
          Effect: Allow
          Resource: "*"
        Version: '2012-10-17'
      PolicyName:
        Fn::Sub: "${AWS::StackName}-PolicyExternalDNSHostedZones"
      Roles:
      - Ref: NodeInstanceRole
