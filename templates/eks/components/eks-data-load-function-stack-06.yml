---
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  RoleARN:
    Type: String
  MyVPC:
    Type: AWS::EC2::VPC::Id
  S3Bucket:
    Type: String
    Default: studio-eks
    Description: Local Bucket where stack exists
  DataLoadFunctionLambdaS3Key:
    Type: String
    Default: lambda/DataLoadFunction.zip
    Description: DataLoadFunction.zip File in bucket
  # DBSubnet1:
  #   Type: AWS::EC2::Subnet::Id
  # DBSubnet2:
  #   Type: AWS::EC2::Subnet::Id
  # DBSubnet3:
  #   Type: AWS::EC2::Subnet::Id
  PrivateSubnets:
    Type: String
Resources:
  DataLoadFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: lambda_function.lambda_handler
      MemorySize: 3008
      # TODO: Remove hard coded bucket
      Code:
        S3Bucket: !Ref S3Bucket #studio-eks
        LambdaS3Key: !Ref DataLoadFunctionLambdaS3Key
      Role:
        Ref: RoleARN
      Runtime: python3.7
      Timeout: 900
      VpcConfig:
        SecurityGroupIds:
        - Ref: LambdaSecurityGroup
        SubnetIds:
          Fn::Split:
          - ","
          - !Ref PrivateSubnets
  LambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Group for Lambda Instance
      VpcId:
        Ref: MyVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 5432
        ToPort: 5432
        CidrIp: 10.0.0.0/16
Outputs:
  FunctionARN:
    Description: FunctionARN
    Value:
      Fn::GetAtt:
      - DataLoadFunction
      - Arn
    Export:
      Name: FunctionARN
